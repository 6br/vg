#!/bin/bash
set -e

# Upload the generated report HTML and summary.
# TODO: replace with a real implementation (maybe in Python).

usage() {
    # Print usage to stderr
    exec 1>&2
    printf "Usage: $0 HTML_IN MD_IN \n"
    exit 1
}

if [[ "$#" -ne 2 ]]; then
    # We need all the arguments
    usage
fi

# Gather all the arguments
HTML_IN="${1}"; shift
MD_IN="${1}"; shift

# Figure out where we are. In the real version this will affect our behavior.
if [ ! -z "${BUILD_NUMBER}" ]; then
    echo "On Jenkins"
    
    # Where we should put the report depends on what build we're doing
    if [ -z ${ghprbActualCommit} ]; then
        echo "Running on master"
        
        # Upload to the path for master, overwriting whatever was there.
        HTML_PATH="vg_cgl/vg_ci/jenkins_reports/branch/master/index.html"
    else
        echo "Running on a pull request"
        
        # Upload to a path specific to this commit.
        HTML_PATH="vg_cgl/vg_ci/jenkins_reports/commit/${ghprbActualCommit}/index.html"
    fi
    
    # Upload the HTML to S3 as the current master report
    aws s3 cp --acl public-read "${HTML_IN}" "s3://cgl-pipeline-inputs/${HTML_PATH}"
    
    # Make the URL for the report HTML
    REPORT_URL="http://cgl-pipeline-inputs.s3.amazonaws.com/${HTML_PATH}"
    
else
    echo "Running locally"
    
    # Report just stays in place
    REPORT_URL="file://${HTML_IN}"
fi

echo "Uploaded HTML as ${REPORT_URL}"

# TODO: upload Markdown
# In the Markdown, "{{REPORT_URL}}" will be replaced with the URL to the uploaded HTML report.
echo "Markdown to post:"
cat "${MD_IN}" | sed "s|{{REPORT_URL}}|${REPORT_URL}|g"





